tools:
  # absolute paths to required tools
  java:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/tools/jdk1.7.0_79/bin/java  # path to java executable
  picard:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/tools/picard/dist/picard.jar  # path to picard tools; call with java -jar
  trimmomatic:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/tools/Trimmomatic-0.33/trimmomatic-0.33.jar  # path to trimmomatic
  fastqc:  fastqc
  samtools:  samtools
  bsmap:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/tools/bsmap-2.90/bsmap  # path to bsmap
  biseqMethCalling: /home/pdatlinger/projects/CpG-seq/pipeline_v4/tools/biseqMethCalling.py  # biseq methcalling script
  biseqMethCalling_tools:  /data/groups/lab_bock/shared/resources/tools  # tools directory for biseqMethCalling containing liftOver, fetchChromSizes and bedToBigBed
  split_reads:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/pipelines/src_pipeline/cpgseq_pipeline/split_reads.py  # split_reads.py script; distributed with this pipeline
  revert_right_reads:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/pipelines/src_pipeline/cpgseq_pipeline/revert_right_reads.py  # revert_right_reads.py script; distributed with this pipeline
  trim_artificial_bases:  /home/pdatlinger/projects/CpG-seq/pipeline_v4/pipelines/src_pipeline/cpgseq_pipeline/trim_artificial_bases.py  # trim_artificial_bases.py script; distributed with this pipeline

resources:
  # paths to reference genomes, adapter files, and other required shared data
  resources: /data/groups/lab_bock/shared/resources
  genomes: /data/groups/lab_bock/shared/resources/genomes/
  adapters: /data/groups/lab_bock/shared/resources/adapters/

parameters:
  # parameters passed to bioinformatic tools, subclassed by tool

  picard:
    include_non_pf_reads:  "true"  # include non pass-filter reads [true|false]

  trimmomatic:
    quality_encoding:  "phred33"  # trimmomatic can recognize the quality encoding automatically [phred33|phred64], phred33 is used since Illumina CASAVA version 1.8
    threads:  30
    illuminaclip:
      adapter_fasta:  "/home/pdatlinger/projects/CpG-seq/pipeline_v4/pipelines/src_pipeline/cpgseq_pipeline/resources/cpgseq_adapter.fa"
        # adapter_fasta must point to a FASTA file containing the CpG-seq adapter sequence up to the i7 index: 'AGTTGGAGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
      seed_mismatches:  2
      palindrome_clip_threshold:  40
      simple_clip_threshold:  7
        # score 0.6 per matching base; MmeI derived fragments sequence 13, 14 or 15 bp into the adapter
        # 13 x 0.6 = 7.8; but leave room for low-quality bases
    slidingwindow:
      window_size:  4
      required_quality:  15  # original:15
    maxinfo:
      target_length:  17
      strictness:  0.5  # original:0.5
    minlen:
      min_length:  17

  bsmap:
    seed_size:  12  # fixed to 12 for RRBS mode
    mismatches_allowed_for_background:  0.10  # allows up to 5 mismatches for background reads
    mismatches_allowed_for_left_splitreads:  0.06  # allows 1 mismatch for left splitreads
    mismatches_allowed_for_right_splitreads:  0.00  # allows for 0 mismatches for the right read fraction
    # this allows 4 mismatches for background (51 bases) and 1 mismatch for MmeI-derived reads (17, 18, 19 or 20 bases)
    equal_best_hits:  100  # number of equal best hits to count; smaller will be faster
    quality_threshold:  15  # quality threshold in trimming the 3' end of reads [0-40], defaults to 0 (no trimming)
    quality_encoding:  33  # quality encoding [33|64] for phred33 and phred64 respectively, defaults to 33
    max_number_of_Ns:  3  # filter reads containing >n Ns, defaults to 5
    processors:  8  # number of processors to use
    random_number_seed:  0  # seed for random number generation when selecting position for multimappers; for reproducible results
    map_to_strands:  0  # 0 to map only to forward strands: ++ and -+; 1 to map to all four strands: ++, +-, -+, --

  biseqMethCalling:
    pf_status:  "All"  # possible values 'PF', 'NonPF', 'All'
    rrbs_mode:  "False"  # enable RRBS mode for methylation calling, values 'True' or 'False', set to False because trimming of artificial bases is done by a dedicated script
    split_reference_genome_dir:  "/data/groups/lab_bock/shared/resources/genomes_split"  # biseqMethCalling requires the reference genome as FASTA files, split by chromosome
    in_genome:  "hg19"  # within the split_genome_dir, a directory named according to the in_genome must exist, containing one FASTA file per chromosome, the FASTA files should be named chr1.fa .. chrM.fa, but biseqMethCalling has an associative array to convert common naming conventions
    strand_predict:  "False"  # strand needs to be confirmed by logistic regression model, defaults to "False" but recommended for whole-genome bisulfite sequencing; values: "True|False"
    process_non_CpG:  "False"  # specify whether non-CpG methylation should be analyzed; does not treat each non-CpG motif differently
    max_mismatches:  0.1  # percentage of mismatches with respect to the read length; I prefer to set this during the alignment for the different CpG-seq read fractions
    base_quality_score_C:  20  # Cs and Ts in a CpG context are only methylation-called if this threshold is reached or exceeded
    base_quality_score_next_to_C:  10  # the 3' neighbors of Cs or Ts are only methylation-called if this threshold is reached or exceeded, except at the start position
    ignore_chrRandom_chrM_hap:  "False"
    fragment_size_ranges:  "10-25,25-50,50-100,100-200,200-400,400-600,600-800,800-1000,1000-1500,1500-2000"  # fragment size ranges for fragment coverage statistice, enter in the format: "40-60,40-80,80-120"
    debug_random_subset:  1  # percentage of including an interval in the analysis; for debugging only; set to 1 to process the whole genome
    is_strand_specific:  "False"  # analyse strands separately; not fully tested
